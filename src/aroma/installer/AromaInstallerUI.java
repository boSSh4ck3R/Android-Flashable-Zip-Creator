/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package aroma.installer;

/**
 *
 * @author Nikhil
 */
public class AromaInstallerUI extends javax.swing.JFrame {

    /**
     * Creates new form AromaInstallerUI
     */
    public AromaInstallerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        normal_tabbedPane = new javax.swing.JTabbedPane();
        aroma_panel = new javax.swing.JPanel();
        aroma_groupScrollPane = new javax.swing.JScrollPane();
        aroma_groupList = new javax.swing.JList();
        arome_filesScrollPane = new javax.swing.JScrollPane();
        aroma_fileList = new javax.swing.JList();
        aroma_addApkGroup = new javax.swing.JButton();
        aroma_listApkGroup = new javax.swing.JButton();
        aroma_addApkFiles = new javax.swing.JButton();
        aroma_removeApkFiles = new javax.swing.JButton();
        aroma_lbl_addGroup = new javax.swing.JLabel();
        aroma_addBootAnimGroup = new javax.swing.JButton();
        aroma_listBootAnimGroup = new javax.swing.JButton();
        aroma_removeBootAnimFiles = new javax.swing.JButton();
        aroma_addBootAnimFiles = new javax.swing.JButton();
        aroma_addRingtoneGroup = new javax.swing.JButton();
        aroma_addNotifGroup = new javax.swing.JButton();
        aroma_addkernelGroup = new javax.swing.JButton();
        aroma_addDeleteApkGroup = new javax.swing.JButton();
        aroma_addOtherFilesGroup = new javax.swing.JButton();
        aroma_listRingtoneGroup = new javax.swing.JButton();
        aroma_listNotifGroup = new javax.swing.JButton();
        aroma_listKernelGroup = new javax.swing.JButton();
        aroma_listDeleteApkGroup = new javax.swing.JButton();
        aroma_listOtherFilesGroup = new javax.swing.JButton();
        aroma_removeRingtoneFiles = new javax.swing.JButton();
        aroma_removeNotifFiles = new javax.swing.JButton();
        aroma_removeKernelFiles = new javax.swing.JButton();
        aroma_removeApksToDelete = new javax.swing.JButton();
        aroma_removeOtherFiles = new javax.swing.JButton();
        aroma_addRingtoneFiles = new javax.swing.JButton();
        aroma_addNotifFiles = new javax.swing.JButton();
        aroma_addKernelFiles = new javax.swing.JButton();
        aroma_addApksToDelete = new javax.swing.JButton();
        aroma_addOtherFiles = new javax.swing.JButton();
        aroma_lbl_listAll = new javax.swing.JLabel();
        aroma_lbl_addFiles = new javax.swing.JLabel();
        aroma_lbl_removeFiles = new javax.swing.JLabel();
        txtaromaExistingZip = new javax.swing.JTextField();
        aroma_load = new javax.swing.JButton();
        aroma_listAllGroups = new javax.swing.JButton();
        aroma_listAllFiles = new javax.swing.JButton();
        aroma_removeGroup = new javax.swing.JButton();
        aroma_remove = new javax.swing.JButton();
        normal_panel = new javax.swing.JPanel();
        normal_addSystemApps = new javax.swing.JButton();
        normal_lbl_clickToAdd = new javax.swing.JLabel();
        normal_addDataApps = new javax.swing.JButton();
        normal_addRingtones = new javax.swing.JButton();
        normal_addNotifTones = new javax.swing.JButton();
        txtnormalKernel = new javax.swing.JTextField();
        normal_removeSystemApps = new javax.swing.JButton();
        normal_lbl_groups = new javax.swing.JLabel();
        txtnormalBootAnim = new javax.swing.JTextField();
        normal_browseKernel = new javax.swing.JButton();
        normal_browseBootAnim = new javax.swing.JButton();
        normal_lbl_clickToRemove = new javax.swing.JLabel();
        normal_removeDataApps = new javax.swing.JButton();
        normal_removeRingtones = new javax.swing.JButton();
        normal_removeNotifTones = new javax.swing.JButton();
        normal_addOtherFiles = new javax.swing.JButton();
        normal_removeOtherFiles = new javax.swing.JButton();
        normal_groupScrollPane = new javax.swing.JScrollPane();
        normal_groupList = new javax.swing.JList();
        normal_filesScrollPane = new javax.swing.JScrollPane();
        normal_fileList = new javax.swing.JList();
        normal_lbl_files = new javax.swing.JLabel();
        normal_listSystemApps = new javax.swing.JButton();
        normal_listDataApps = new javax.swing.JButton();
        normal_listRingtones = new javax.swing.JButton();
        normal_listNotifTones = new javax.swing.JButton();
        normal_listOtherFiles = new javax.swing.JButton();
        normal_lbl_listAll = new javax.swing.JLabel();
        normal_addFilesToDelete = new javax.swing.JButton();
        normal_removeFilesToDelete = new javax.swing.JButton();
        normal_listFilesToDelete = new javax.swing.JButton();
        lblUpdateBinary = new javax.swing.JLabel();
        txtUpdateBinary = new javax.swing.JTextField();
        btnBrowseUpdateBinary = new javax.swing.JButton();
        txtZipDestination = new javax.swing.JTextField();
        btnBrowseZip = new javax.swing.JButton();
        btnCreateFlashableZip = new javax.swing.JButton();
        btnCheckOkay = new javax.swing.JButton();
        lblCheckOkay = new javax.swing.JLabel();
        btnCurrentlySupportedDevices = new javax.swing.JButton();
        btnResetEverything = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuBarFile = new javax.swing.JMenu();
        menuItemExit = new javax.swing.JMenuItem();
        menuBarHelp = new javax.swing.JMenu();
        menuItemFAQ = new javax.swing.JMenuItem();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        aroma_groupList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        aroma_groupScrollPane.setViewportView(aroma_groupList);

        aroma_fileList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        arome_filesScrollPane.setViewportView(aroma_fileList);

        aroma_addApkGroup.setText("Apk Group");
        aroma_addApkGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addApkGroupActionPerformed(evt);
            }
        });

        aroma_listApkGroup.setText("Apk Group");
        aroma_listApkGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listApkGroupActionPerformed(evt);
            }
        });

        aroma_addApkFiles.setText("Apks");
        aroma_addApkFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addApkFilesActionPerformed(evt);
            }
        });

        aroma_removeApkFiles.setText("Apks");
        aroma_removeApkFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeApkFilesActionPerformed(evt);
            }
        });

        aroma_lbl_addGroup.setText("             Add Groups           ");

        aroma_addBootAnimGroup.setText("Boot Animation Group");
        aroma_addBootAnimGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addBootAnimGroupActionPerformed(evt);
            }
        });

        aroma_listBootAnimGroup.setText("Boot Animation Group");
        aroma_listBootAnimGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listBootAnimGroupActionPerformed(evt);
            }
        });

        aroma_removeBootAnimFiles.setText("Boot Animations");
        aroma_removeBootAnimFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeBootAnimFilesActionPerformed(evt);
            }
        });

        aroma_addBootAnimFiles.setText("Boot Animations");
        aroma_addBootAnimFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addBootAnimFilesActionPerformed(evt);
            }
        });

        aroma_addRingtoneGroup.setText("Ringtone Group");
        aroma_addRingtoneGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addRingtoneGroupActionPerformed(evt);
            }
        });

        aroma_addNotifGroup.setText("Notification Group");
        aroma_addNotifGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addNotifGroupActionPerformed(evt);
            }
        });

        aroma_addkernelGroup.setText("Kernel Group");
        aroma_addkernelGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addkernelGroupActionPerformed(evt);
            }
        });

        aroma_addDeleteApkGroup.setText("Delete Apk Group");
        aroma_addDeleteApkGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addDeleteApkGroupActionPerformed(evt);
            }
        });

        aroma_addOtherFilesGroup.setText("Other Files Group");
        aroma_addOtherFilesGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addOtherFilesGroupActionPerformed(evt);
            }
        });

        aroma_listRingtoneGroup.setText("Ringtone Group");
        aroma_listRingtoneGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listRingtoneGroupActionPerformed(evt);
            }
        });

        aroma_listNotifGroup.setText("Notification Group");
        aroma_listNotifGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listNotifGroupActionPerformed(evt);
            }
        });

        aroma_listKernelGroup.setText("Kernel Group");
        aroma_listKernelGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listKernelGroupActionPerformed(evt);
            }
        });

        aroma_listDeleteApkGroup.setText("Delete Apk Group");
        aroma_listDeleteApkGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listDeleteApkGroupActionPerformed(evt);
            }
        });

        aroma_listOtherFilesGroup.setText("Other Files Group");
        aroma_listOtherFilesGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listOtherFilesGroupActionPerformed(evt);
            }
        });

        aroma_removeRingtoneFiles.setText("Ringtones");
        aroma_removeRingtoneFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeRingtoneFilesActionPerformed(evt);
            }
        });

        aroma_removeNotifFiles.setText("Notification Tones");
        aroma_removeNotifFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeNotifFilesActionPerformed(evt);
            }
        });

        aroma_removeKernelFiles.setText("Kernels");
        aroma_removeKernelFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeKernelFilesActionPerformed(evt);
            }
        });

        aroma_removeApksToDelete.setText("Apks To Delete");
        aroma_removeApksToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeApksToDeleteActionPerformed(evt);
            }
        });

        aroma_removeOtherFiles.setText("Other Files");
        aroma_removeOtherFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_removeOtherFilesActionPerformed(evt);
            }
        });

        aroma_addRingtoneFiles.setText("Ringtones");
        aroma_addRingtoneFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addRingtoneFilesActionPerformed(evt);
            }
        });

        aroma_addNotifFiles.setText("Notification Tones");
        aroma_addNotifFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addNotifFilesActionPerformed(evt);
            }
        });

        aroma_addKernelFiles.setText("Kernels");
        aroma_addKernelFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addKernelFilesActionPerformed(evt);
            }
        });

        aroma_addApksToDelete.setText("Apks To Delete");
        aroma_addApksToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addApksToDeleteActionPerformed(evt);
            }
        });

        aroma_addOtherFiles.setText("Other Files");
        aroma_addOtherFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_addOtherFilesActionPerformed(evt);
            }
        });

        aroma_lbl_listAll.setText("                 List All");

        aroma_lbl_addFiles.setText("             Add Files");

        aroma_lbl_removeFiles.setText("         Remove Files");

        txtaromaExistingZip.setText("Load Existing Aroma Flashable Zip To Make Changes...");

        aroma_load.setText("Load");
        aroma_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_loadActionPerformed(evt);
            }
        });

        aroma_listAllGroups.setText("List All Groups");
        aroma_listAllGroups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listAllGroupsActionPerformed(evt);
            }
        });

        aroma_listAllFiles.setText("List All Files");
        aroma_listAllFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aroma_listAllFilesActionPerformed(evt);
            }
        });

        aroma_removeGroup.setText("Remove Group");

        aroma_remove.setText("Remove");

        javax.swing.GroupLayout aroma_panelLayout = new javax.swing.GroupLayout(aroma_panel);
        aroma_panel.setLayout(aroma_panelLayout);
        aroma_panelLayout.setHorizontalGroup(
            aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aroma_panelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aroma_panelLayout.createSequentialGroup()
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(aroma_addBootAnimGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_addApkGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_addRingtoneGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_addNotifGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_addkernelGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_addOtherFilesGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aroma_lbl_addGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(aroma_addDeleteApkGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(aroma_panelLayout.createSequentialGroup()
                                .addComponent(aroma_groupScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aroma_panelLayout.createSequentialGroup()
                                .addComponent(aroma_removeGroup)
                                .addGap(50, 50, 50)))
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(aroma_lbl_listAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listApkGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listBootAnimGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listRingtoneGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listNotifGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listKernelGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listDeleteApkGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_listOtherFilesGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aroma_addBootAnimFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aroma_addApkFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(aroma_panelLayout.createSequentialGroup()
                                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(aroma_addApksToDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(aroma_addNotifFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(aroma_addRingtoneFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(aroma_addKernelFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(aroma_addOtherFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(aroma_lbl_addFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(aroma_panelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(arome_filesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(aroma_panelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(aroma_remove))))
                    .addComponent(txtaromaExistingZip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(aroma_removeBootAnimFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeApkFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeRingtoneFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeNotifFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeKernelFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeApksToDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_removeOtherFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_lbl_removeFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aroma_load, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81))
            .addGroup(aroma_panelLayout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(aroma_listAllGroups)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aroma_listAllFiles)
                .addGap(250, 250, 250))
        );
        aroma_panelLayout.setVerticalGroup(
            aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aroma_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aroma_lbl_addGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aroma_lbl_listAll)
                    .addComponent(aroma_lbl_addFiles)
                    .addComponent(aroma_lbl_removeFiles)
                    .addComponent(aroma_removeGroup)
                    .addComponent(aroma_remove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(aroma_panelLayout.createSequentialGroup()
                            .addComponent(aroma_removeApkFiles)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_removeBootAnimFiles)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_removeRingtoneFiles)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_removeNotifFiles)
                            .addGap(11, 11, 11)
                            .addComponent(aroma_removeKernelFiles)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_removeOtherFiles)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_removeApksToDelete))
                        .addGroup(aroma_panelLayout.createSequentialGroup()
                            .addComponent(aroma_addApkGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addBootAnimGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addRingtoneGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addNotifGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addkernelGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addOtherFilesGroup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(aroma_addDeleteApkGroup))
                        .addComponent(aroma_groupScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                        .addComponent(arome_filesScrollPane))
                    .addGroup(aroma_panelLayout.createSequentialGroup()
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listApkGroup)
                            .addComponent(aroma_addApkFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listBootAnimGroup)
                            .addComponent(aroma_addBootAnimFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listRingtoneGroup)
                            .addComponent(aroma_addRingtoneFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listNotifGroup)
                            .addComponent(aroma_addNotifFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listKernelGroup)
                            .addComponent(aroma_addKernelFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listOtherFilesGroup)
                            .addComponent(aroma_addOtherFiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aroma_listDeleteApkGroup)
                            .addComponent(aroma_addApksToDelete))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aroma_listAllGroups)
                    .addComponent(aroma_listAllFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(aroma_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtaromaExistingZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aroma_load))
                .addGap(17, 17, 17))
        );

        normal_tabbedPane.addTab("Create Aroma Flashable Zip", aroma_panel);

        normal_addSystemApps.setText("System Apps");
        normal_addSystemApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addSystemAppsActionPerformed(evt);
            }
        });

        normal_lbl_clickToAdd.setText("Click here to add");

        normal_addDataApps.setText("Data Apps");
        normal_addDataApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addDataAppsActionPerformed(evt);
            }
        });

        normal_addRingtones.setText("Ringtones");
        normal_addRingtones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addRingtonesActionPerformed(evt);
            }
        });

        normal_addNotifTones.setText("Notification Tones");
        normal_addNotifTones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addNotifTonesActionPerformed(evt);
            }
        });

        txtnormalKernel.setText("Browse here to add boot.img file of kernel to be flashed...");

        normal_removeSystemApps.setText("System Apps");
        normal_removeSystemApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeSystemAppsActionPerformed(evt);
            }
        });

        normal_lbl_groups.setText("Groups");

        txtnormalBootAnim.setText("Browse here to add bootanimation.zip file of boot animation to be added...");

        normal_browseKernel.setText("Browse");
        normal_browseKernel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_browseKernelActionPerformed(evt);
            }
        });

        normal_browseBootAnim.setText("Browse");
        normal_browseBootAnim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_browseBootAnimActionPerformed(evt);
            }
        });

        normal_lbl_clickToRemove.setText("Click here to remove");

        normal_removeDataApps.setText("Data Apps");
        normal_removeDataApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeDataAppsActionPerformed(evt);
            }
        });

        normal_removeRingtones.setText("Ringtones");
        normal_removeRingtones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeRingtonesActionPerformed(evt);
            }
        });

        normal_removeNotifTones.setText("Notification Tones");
        normal_removeNotifTones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeNotifTonesActionPerformed(evt);
            }
        });

        normal_addOtherFiles.setText("Other Files");
        normal_addOtherFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addOtherFilesActionPerformed(evt);
            }
        });

        normal_removeOtherFiles.setText("Other Files");
        normal_removeOtherFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeOtherFilesActionPerformed(evt);
            }
        });

        normal_groupList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        normal_groupScrollPane.setViewportView(normal_groupList);

        normal_fileList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        normal_filesScrollPane.setViewportView(normal_fileList);

        normal_lbl_files.setText("Files");

        normal_listSystemApps.setText("System Apps");
        normal_listSystemApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listSystemAppsActionPerformed(evt);
            }
        });

        normal_listDataApps.setText("Data Apps");
        normal_listDataApps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listDataAppsActionPerformed(evt);
            }
        });

        normal_listRingtones.setText("Ringtones");
        normal_listRingtones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listRingtonesActionPerformed(evt);
            }
        });

        normal_listNotifTones.setText("Notification Tones");
        normal_listNotifTones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listNotifTonesActionPerformed(evt);
            }
        });

        normal_listOtherFiles.setText("Other Files");
        normal_listOtherFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listOtherFilesActionPerformed(evt);
            }
        });

        normal_lbl_listAll.setText("List All");

        normal_addFilesToDelete.setText("Files to Delete");
        normal_addFilesToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_addFilesToDeleteActionPerformed(evt);
            }
        });

        normal_removeFilesToDelete.setText("Files to Delete");
        normal_removeFilesToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_removeFilesToDeleteActionPerformed(evt);
            }
        });

        normal_listFilesToDelete.setText("Files to Delete");
        normal_listFilesToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normal_listFilesToDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout normal_panelLayout = new javax.swing.GroupLayout(normal_panel);
        normal_panel.setLayout(normal_panelLayout);
        normal_panelLayout.setHorizontalGroup(
            normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normal_panelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(normal_panelLayout.createSequentialGroup()
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(normal_addNotifTones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(normal_addRingtones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(normal_addDataApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(normal_addSystemApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(normal_addOtherFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(normal_lbl_clickToAdd))
                            .addComponent(normal_addFilesToDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addComponent(normal_lbl_groups)
                                .addGap(100, 100, 100)
                                .addComponent(normal_lbl_clickToRemove)
                                .addGap(9, 9, 9))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, normal_panelLayout.createSequentialGroup()
                                .addComponent(normal_groupScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(normal_removeNotifTones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_removeDataApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_removeSystemApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_removeRingtones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_removeOtherFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_removeFilesToDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(normal_lbl_files)
                                .addGap(139, 139, 139)
                                .addComponent(normal_lbl_listAll))
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(normal_filesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(normal_listNotifTones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_listSystemApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_listDataApps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_listRingtones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_listOtherFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(normal_listFilesToDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(normal_panelLayout.createSequentialGroup()
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnormalKernel)
                            .addComponent(txtnormalBootAnim, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(normal_browseKernel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(normal_browseBootAnim, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(33, 33, 33)))
                .addGap(147, 147, 147))
        );
        normal_panelLayout.setVerticalGroup(
            normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normal_panelLayout.createSequentialGroup()
                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(normal_panelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(normal_lbl_clickToAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(normal_lbl_groups)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, normal_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(normal_lbl_clickToRemove)
                            .addComponent(normal_lbl_files)
                            .addComponent(normal_lbl_listAll))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(normal_filesScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(normal_panelLayout.createSequentialGroup()
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addComponent(normal_listSystemApps)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(normal_listDataApps)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(normal_listRingtones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(normal_listNotifTones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(normal_listOtherFiles))
                            .addGroup(normal_panelLayout.createSequentialGroup()
                                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(normal_panelLayout.createSequentialGroup()
                                        .addComponent(normal_removeSystemApps)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(normal_removeDataApps)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(normal_removeRingtones)
                                        .addGap(11, 11, 11)
                                        .addComponent(normal_removeNotifTones))
                                    .addGroup(normal_panelLayout.createSequentialGroup()
                                        .addComponent(normal_addSystemApps)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(normal_addDataApps)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(normal_addRingtones)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(normal_addNotifTones)))
                                .addGap(11, 11, 11)
                                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(normal_addOtherFiles)
                                    .addComponent(normal_removeOtherFiles))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(normal_addFilesToDelete)
                            .addComponent(normal_removeFilesToDelete)
                            .addComponent(normal_listFilesToDelete)))
                    .addComponent(normal_groupScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(normal_panelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(normal_browseKernel))
                    .addComponent(txtnormalKernel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(normal_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnormalBootAnim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(normal_browseBootAnim))
                .addGap(18, 18, 18))
        );

        normal_tabbedPane.addTab("Create Normal Flashable Zip", normal_panel);

        lblUpdateBinary.setText("Enter Working update-binary File from your device's existing ROM (i.e. located in META-INF/com/google/android/ folder) if your device is not listed here in List of ");

        txtUpdateBinary.setText("Browse File From Here...");

        btnBrowseUpdateBinary.setText("Browse");

        txtZipDestination.setText("Select Destination Folder...");

        btnBrowseZip.setText("Browse");

        btnCreateFlashableZip.setText("Create Flashable Zip");

        btnCheckOkay.setText("Check If Everything is Okay!");

        lblCheckOkay.setText("After you are ready to Create Zip File, Click Here, It is Recommended to");

        btnCurrentlySupportedDevices.setText("Currently Supported Devices");

        btnResetEverything.setText("Reset Everything");

        menuBarFile.setText("File");

        menuItemExit.setText("Exit");
        menuBarFile.add(menuItemExit);

        menuBar.add(menuBarFile);

        menuBarHelp.setText("Help");

        menuItemFAQ.setText("FAQ");
        menuBarHelp.add(menuItemFAQ);

        menuItemAbout.setText("About");
        menuBarHelp.add(menuItemAbout);

        menuBar.add(menuBarHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCheckOkay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCheckOkay)
                        .addGap(30, 30, 30)
                        .addComponent(btnResetEverything)
                        .addGap(30, 30, 30)
                        .addComponent(btnCreateFlashableZip))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtZipDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnBrowseZip, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(normal_tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtUpdateBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBrowseUpdateBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblUpdateBinary)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCurrentlySupportedDevices))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateBinary)
                    .addComponent(btnCurrentlySupportedDevices))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateBinary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseUpdateBinary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(normal_tabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseZip))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCheckOkay)
                    .addComponent(btnCheckOkay)
                    .addComponent(btnCreateFlashableZip)
                    .addComponent(btnResetEverything))
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aroma_addApkGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addApkGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addApkGroupActionPerformed

    private void aroma_addBootAnimGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addBootAnimGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addBootAnimGroupActionPerformed

    private void aroma_addRingtoneGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addRingtoneGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addRingtoneGroupActionPerformed

    private void aroma_addNotifGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addNotifGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addNotifGroupActionPerformed

    private void aroma_addkernelGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addkernelGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addkernelGroupActionPerformed

    private void aroma_addOtherFilesGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addOtherFilesGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addOtherFilesGroupActionPerformed

    private void aroma_addDeleteApkGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addDeleteApkGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addDeleteApkGroupActionPerformed

    private void aroma_listApkGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listApkGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listApkGroupActionPerformed

    private void aroma_listBootAnimGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listBootAnimGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listBootAnimGroupActionPerformed

    private void aroma_listRingtoneGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listRingtoneGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listRingtoneGroupActionPerformed

    private void aroma_listNotifGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listNotifGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listNotifGroupActionPerformed

    private void aroma_listKernelGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listKernelGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listKernelGroupActionPerformed

    private void aroma_listOtherFilesGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listOtherFilesGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listOtherFilesGroupActionPerformed

    private void aroma_listDeleteApkGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listDeleteApkGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listDeleteApkGroupActionPerformed

    private void aroma_addApkFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addApkFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addApkFilesActionPerformed

    private void aroma_addBootAnimFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addBootAnimFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addBootAnimFilesActionPerformed

    private void aroma_addRingtoneFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addRingtoneFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addRingtoneFilesActionPerformed

    private void aroma_addNotifFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addNotifFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addNotifFilesActionPerformed

    private void aroma_addKernelFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addKernelFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addKernelFilesActionPerformed

    private void aroma_addOtherFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addOtherFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addOtherFilesActionPerformed

    private void aroma_addApksToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_addApksToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_addApksToDeleteActionPerformed

    private void aroma_removeApkFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeApkFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeApkFilesActionPerformed

    private void aroma_removeBootAnimFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeBootAnimFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeBootAnimFilesActionPerformed

    private void aroma_removeRingtoneFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeRingtoneFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeRingtoneFilesActionPerformed

    private void aroma_removeNotifFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeNotifFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeNotifFilesActionPerformed

    private void aroma_removeKernelFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeKernelFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeKernelFilesActionPerformed

    private void aroma_removeOtherFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeOtherFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeOtherFilesActionPerformed

    private void aroma_removeApksToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_removeApksToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_removeApksToDeleteActionPerformed

    private void aroma_listAllGroupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listAllGroupsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listAllGroupsActionPerformed

    private void aroma_listAllFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_listAllFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_listAllFilesActionPerformed

    private void aroma_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aroma_loadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aroma_loadActionPerformed

    private void normal_addSystemAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addSystemAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addSystemAppsActionPerformed

    private void normal_addDataAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addDataAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addDataAppsActionPerformed

    private void normal_addRingtonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addRingtonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addRingtonesActionPerformed

    private void normal_addNotifTonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addNotifTonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addNotifTonesActionPerformed

    private void normal_addOtherFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addOtherFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addOtherFilesActionPerformed

    private void normal_addFilesToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_addFilesToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_addFilesToDeleteActionPerformed

    private void normal_removeSystemAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeSystemAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeSystemAppsActionPerformed

    private void normal_removeDataAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeDataAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeDataAppsActionPerformed

    private void normal_removeRingtonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeRingtonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeRingtonesActionPerformed

    private void normal_removeNotifTonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeNotifTonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeNotifTonesActionPerformed

    private void normal_removeOtherFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeOtherFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeOtherFilesActionPerformed

    private void normal_removeFilesToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_removeFilesToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_removeFilesToDeleteActionPerformed

    private void normal_listSystemAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listSystemAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listSystemAppsActionPerformed

    private void normal_listDataAppsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listDataAppsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listDataAppsActionPerformed

    private void normal_listRingtonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listRingtonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listRingtonesActionPerformed

    private void normal_listNotifTonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listNotifTonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listNotifTonesActionPerformed

    private void normal_listOtherFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listOtherFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listOtherFilesActionPerformed

    private void normal_listFilesToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_listFilesToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_listFilesToDeleteActionPerformed

    private void normal_browseKernelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_browseKernelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_browseKernelActionPerformed

    private void normal_browseBootAnimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normal_browseBootAnimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normal_browseBootAnimActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AromaInstallerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AromaInstallerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AromaInstallerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AromaInstallerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AromaInstallerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aroma_addApkFiles;
    private javax.swing.JButton aroma_addApkGroup;
    private javax.swing.JButton aroma_addApksToDelete;
    private javax.swing.JButton aroma_addBootAnimFiles;
    private javax.swing.JButton aroma_addBootAnimGroup;
    private javax.swing.JButton aroma_addDeleteApkGroup;
    private javax.swing.JButton aroma_addKernelFiles;
    private javax.swing.JButton aroma_addNotifFiles;
    private javax.swing.JButton aroma_addNotifGroup;
    private javax.swing.JButton aroma_addOtherFiles;
    private javax.swing.JButton aroma_addOtherFilesGroup;
    private javax.swing.JButton aroma_addRingtoneFiles;
    private javax.swing.JButton aroma_addRingtoneGroup;
    private javax.swing.JButton aroma_addkernelGroup;
    private javax.swing.JList aroma_fileList;
    private javax.swing.JList aroma_groupList;
    private javax.swing.JScrollPane aroma_groupScrollPane;
    private javax.swing.JLabel aroma_lbl_addFiles;
    private javax.swing.JLabel aroma_lbl_addGroup;
    private javax.swing.JLabel aroma_lbl_listAll;
    private javax.swing.JLabel aroma_lbl_removeFiles;
    private javax.swing.JButton aroma_listAllFiles;
    private javax.swing.JButton aroma_listAllGroups;
    private javax.swing.JButton aroma_listApkGroup;
    private javax.swing.JButton aroma_listBootAnimGroup;
    private javax.swing.JButton aroma_listDeleteApkGroup;
    private javax.swing.JButton aroma_listKernelGroup;
    private javax.swing.JButton aroma_listNotifGroup;
    private javax.swing.JButton aroma_listOtherFilesGroup;
    private javax.swing.JButton aroma_listRingtoneGroup;
    private javax.swing.JButton aroma_load;
    private javax.swing.JPanel aroma_panel;
    private javax.swing.JButton aroma_remove;
    private javax.swing.JButton aroma_removeApkFiles;
    private javax.swing.JButton aroma_removeApksToDelete;
    private javax.swing.JButton aroma_removeBootAnimFiles;
    private javax.swing.JButton aroma_removeGroup;
    private javax.swing.JButton aroma_removeKernelFiles;
    private javax.swing.JButton aroma_removeNotifFiles;
    private javax.swing.JButton aroma_removeOtherFiles;
    private javax.swing.JButton aroma_removeRingtoneFiles;
    private javax.swing.JScrollPane arome_filesScrollPane;
    private javax.swing.JButton btnBrowseUpdateBinary;
    private javax.swing.JButton btnBrowseZip;
    private javax.swing.JButton btnCheckOkay;
    private javax.swing.JButton btnCreateFlashableZip;
    private javax.swing.JButton btnCurrentlySupportedDevices;
    private javax.swing.JButton btnResetEverything;
    private javax.swing.JLabel lblCheckOkay;
    private javax.swing.JLabel lblUpdateBinary;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBarFile;
    private javax.swing.JMenu menuBarHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemFAQ;
    private javax.swing.JButton normal_addDataApps;
    private javax.swing.JButton normal_addFilesToDelete;
    private javax.swing.JButton normal_addNotifTones;
    private javax.swing.JButton normal_addOtherFiles;
    private javax.swing.JButton normal_addRingtones;
    private javax.swing.JButton normal_addSystemApps;
    private javax.swing.JButton normal_browseBootAnim;
    private javax.swing.JButton normal_browseKernel;
    private javax.swing.JList normal_fileList;
    private javax.swing.JScrollPane normal_filesScrollPane;
    private javax.swing.JList normal_groupList;
    private javax.swing.JScrollPane normal_groupScrollPane;
    private javax.swing.JLabel normal_lbl_clickToAdd;
    private javax.swing.JLabel normal_lbl_clickToRemove;
    private javax.swing.JLabel normal_lbl_files;
    private javax.swing.JLabel normal_lbl_groups;
    private javax.swing.JLabel normal_lbl_listAll;
    private javax.swing.JButton normal_listDataApps;
    private javax.swing.JButton normal_listFilesToDelete;
    private javax.swing.JButton normal_listNotifTones;
    private javax.swing.JButton normal_listOtherFiles;
    private javax.swing.JButton normal_listRingtones;
    private javax.swing.JButton normal_listSystemApps;
    private javax.swing.JPanel normal_panel;
    private javax.swing.JButton normal_removeDataApps;
    private javax.swing.JButton normal_removeFilesToDelete;
    private javax.swing.JButton normal_removeNotifTones;
    private javax.swing.JButton normal_removeOtherFiles;
    private javax.swing.JButton normal_removeRingtones;
    private javax.swing.JButton normal_removeSystemApps;
    private javax.swing.JTabbedPane normal_tabbedPane;
    private javax.swing.JTextField txtUpdateBinary;
    private javax.swing.JTextField txtZipDestination;
    private javax.swing.JTextField txtaromaExistingZip;
    private javax.swing.JTextField txtnormalBootAnim;
    private javax.swing.JTextField txtnormalKernel;
    // End of variables declaration//GEN-END:variables
}
